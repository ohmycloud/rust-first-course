syntax = "proto3";

package abi; // 这个名字会被用作编译结果，prost 会产生：abi.rs

// 一个 ImageSpec 是一个有序的数组，服务器按照 spec 的顺序处理
message ImageSpec { repeated Spec specs = 1; }

// 处理图片改变大小
message Resize {
  uint32 width = 1;
  uint32 height = 2;

  enum ResizeType {
    NORMAL = 0;
    SEAM_CARVE = 1;
  }

  ResizeType rtype = 3;

  //  采样滤波
  enum SampleFilter {
    UNDEFINED = 0;
    NEAREST = 1;
    TRIANGLE = 2;
    CATMULL_ROM = 3;
    GAUSSIAN = 4;
    LANCZOS3 = 5;
  }

  SampleFilter filter = 4;
}

// 剪裁
message Crop {
  uint32 x1 = 1;
  uint32 y1 = 2;
  uint32 x2 = 3;
  uint32 y2 = 4;
}

// 水平翻转
message Fliph {}
// 垂直翻转
message Flipv {}
// 对比度
message Contrast { float contrast = 1; }
// 滤镜
message Filter {
  enum Filter {
    UNSPECIFIED = 0;
    OCEANIC = 1;
    ISLANDS = 2;
    MARINE = 3;
    SEAGREEN = 4;
    FLAGBLUE = 5;
    LIQUID = 6;
    DIAMANTE = 7;
    RADIO = 8;
    TWENTIES = 9;
    ROSETINT = 10;
    MAUVE = 11;
    BLUECHROME = 12;
    VINTAGE = 13;
    PERFUME = 14;
    SERENITY = 15;
    // more: https://docs.rs/photon-rs/0.3.1/photon_rs/filters/fn.filter.html
  }
  Filter filter = 1;
}

// 水印
message Watermark {
  uint32 x = 1;
  uint32 y = 2;
}

// 混合
message Blend {
  enum Blend {
    OVERLAY = 0;
    OVER = 1;
    ATOP = 2;
    XOR = 3;
    MULTIPLY = 4;
    BURN = 5;
    SOFT_LIGHT = 6;
    HARD_LIGHT = 7;
    DIFFERENCE = 8;
    LIGHTEN = 9;
    DARKEN = 10;
    DODGE = 11;
    PLUS = 12;
    EXCLUSION = 13;
  }
  Blend blend = 1;
}

// 一个 spec 可以包含上述的处理方式之一
message Spec {
  oneof data {
    Resize resize = 1;
    Crop crop = 2;
    Flipv flipv = 3;
    Fliph fliph = 4;
    Contrast contrast = 5;
    Filter filter = 6;
    Watermark watermark = 7;
    Blend blend = 8;
  }
}
